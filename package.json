{
  "private": false,
  "name": "@megabytelabs/devcontainer",
  "version": "0.0.1",
  "description": "The Docker-based, DevContainer development environment for multi-language projects",
  "license": "MIT",
  "author": "Brian Zalewski <brian@megabyte.space> (https://megabyte.space)",
  "homepage": "https://megabyte.space",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ProfessorManhattan/docker-devcontainer.git"
  },
  "bugs": {
    "email": "help@megabyte.space",
    "url": "https://gitlab.com/megabyte-labs/docker/software/devcontainer/-/issues"
  },
  "type": "commonjs",
  "main": "dist/main.js",
  "files": [
    "bin/",
    "dist/"
  ],
  "scripts": {
    "prebuild": "task install:gh:act install:gh:bat install:gh:croc install:gh:dasel install:gh:deno install:gh:direnv install:gh:dive install:gh:dockle install:gh:ffsend install:gh:fusion install:gh:gh install:gh:gitleaks install:gh:glab install:gh:kubectx install:gh:mkcert install:gh:oq install:gh:task install:gh:tokei install:gh:trivy install:gh:up install:gh:yq",
    "build": "bash start.sh && task docker:build",
    "postbuild": "task install:npm:devcontainer && devcontainer build",
    "bump": "npm run build && npm version patch --no-commit-hooks --no-git-tag-version --force && npm publish",
    "commit": "bash start.sh && task commit",
    "fix": "bash start.sh && task fix",
    "help": "bash start.sh && task --menu",
    "lint": "bash start.sh && task lint",
    "preload": "bash start.sh && task preload",
    "prepare": "bash start.sh && (test -f Taskfile.yml && task npm:prepare) || true",
    "prepublishOnly": "test -z $SKIP_PREPUB && bash start.sh && task npm:bundle:create || true",
    "release": "bash start.sh && task publish:semantic-release",
    "repair": "bash <(curl -sS https://install.doctor/repair)",
    "start": "test -z $SKIP_NPM_START && bash start.sh || true",
    "test": "bash start.sh && task docker:test",
    "unpack": "bash start.sh && task npm:bundle:unpack",
    "update": "bash start.sh && task update"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/git-cz-emoji"
    }
  },
  "typings": "dist/main.d.ts",
  "dependencies": {},
  "optionalDependencies": {},
  "devDependencies": {
    "eslint-config-strict-mode": "latest",
    "git-cz-emoji": "latest",
    "prettier-config-sexy-mode": "latest",
    "semantic-release-config": "latest",
    "typescript": "^4.5.5",
    "@commitlint/config-conventional": "latest",
    "handlebars-helpers": "latest"
  },
  "keywords": [
    "codespaces",
    "container",
    "docker",
    "dockerfile",
    "github",
    "mblabs",
    "megabytelabs",
    "professormanhattan",
    "software",
    "virtualization",
    "washingtondc"
  ],
  "engines": {
    "node": ">=14.18.0"
  },
  "publishConfig": {
    "@megabyte:registry": "https://gitlab.com/api/v4/projects/33871141/packages/npm/",
    "access": "public"
  },
  "blueprint": {
    "description": "The Docker-based, DevContainer development environment for multi-language projects",
    "dockerBaseTag": "devcontainer",
    "github_id": "R_kgDOG31-vQ",
    "gitlab_group_id": "11773364",
    "gitlab_project_id": "33871141",
    "group": "docker",
    "name": "Megabyte Labs DevContainer",
    "overview": "This project is home of the base Docker image used for provisioning [DevContainer environments](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/configuring-codespaces-for-your-project). A DevContainer environment is a Docker image that bundles common dependencies and build tools so that development environments can be easily spun up and transferred remotely. Both GitHub and VSCode have native support for DevContainers. This project borrows most of its' code from the [Microsoft vscode-dev-containers repository](https://github.com/microsoft/vscode-dev-containers/). After applying their base system changes:\n\n* A [Brewfile](https://github.com/ProfessorManhattan/docker-devcontainer/blob/master/.config/Brewfile) is used to install software\n* A [global-package.json](https://github.com/ProfessorManhattan/docker-devcontainer/blob/master/.config/global-package.json) is used to install global NPM dependencies\n* The rest is handled somewhat dynamically by **[Bodega](https://github.com/ProfessorManhattan/Bodega)** and the `Taskfile.yml` that is present in all of our repositories",
    "repository": {
      "github": "https://github.com/megabyte-labs/docker-devcontainer",
      "gitlab": "https://gitlab.com/megabyte-labs/docker/software/devcontainer"
    },
    "slug": "devcontainer",
    "subgroup": "software",
    "title": "An All-in-One DevContainer Environment for Rapid Development"
  },
  "changelog": {
    "displayTypes": [
      "feat",
      "fix",
      "perf",
      "refactor",
      "revert"
    ],
    "showAuthor": true
  },
  "commitlint": {
    "extends": [],
    "helpUrl": "https://megabyte.space/docs/contributing/commits"
  },
  "engine": "node >= 0.12.4",
  "eslintConfig": {
    "extends": "eslint-config-strict-mode",
    "ignorePatterns": [
      "bin/eslint.js",
      "test/",
      "test-output/"
    ],
    "rules": {}
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/megabytelabs"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/ProfessorManhattan"
    }
  ],
  "jscpd": {
    "gitignore": true,
    "threshold": 0.1
  },
  "lint-staged": {
    "(Brewfile|composer.lock|Gemfile|Gopkg.lock|Pipfile.lock)": [
      "task fix:prettier --"
    ],
    "**/!(logo).(jpg|png)": [
      "task image:compress --"
    ],
    "**/*": [
      "task lint:any --"
    ],
    "**/*!(template).(json|webapp|webmanifest)": [
      "task fix:json --"
    ],
    "**/*.(bash|cfg|cgi|command|css|env|env.*|handlebars|hbs|html|less|fcgi|java|md|mdx|mjml|php|phtml|properties|reg|scss|tmpl|tmux|tool|tpl|zsh)": [
      "task fix:prettier --"
    ],
    "**/*.(cjs|js|jsx|mjs|ts|tsx)": [
      "task fix:js --",
      "task lint:js --"
    ],
    "**/*.(yml|yaml)": [
      "task fix:yaml --",
      "task lint:yaml --"
    ],
    "**/*.go": [
      "task fix:go --",
      "task lint:go --"
    ],
    "**/*.md": [
      "task fix:markdown --",
      "task lint:spelling:markdown --"
    ],
    "**/*.php": [
      "task fix:php --",
      "task lint:php --"
    ],
    "**/*.py": [
      "task fix:python --",
      "task lint:python --"
    ],
    "**/*.sh": [
      "task fix:prettier --",
      "task fix:shell --",
      "task lint:shell --"
    ],
    "**/*.toml": [
      "task fix:toml --",
      "task fix:prettier --",
      "task lint:toml --"
    ],
    "**/*.xml": [
      "task fix:xml --",
      "task lint:xml --"
    ],
    "Dockerfile": [
      "task fix:prettier --",
      "task lint:docker --"
    ],
    "Vagrantfile": [
      "task fix:prettier --",
      "task lint:vagrant"
    ],
    "logo.png": [
      "task image:resize -- 200 200",
      "task image:compress --"
    ]
  },
  "ntl": {
    "descriptions": {
      "build": "Builds the project using the build command specified under scripts in package.json",
      "bump": "Used to quickly build, increase the package.json version, and publish the package",
      "commit": "If unsure, use this task to commit your code so that it adheres to our commit rules",
      "fix": "Run auto-fixing with all available auto-fixers",
      "help": "Display the Bodega Taskfile.yml interactive help menu",
      "lint": "Lint the project with all available linters",
      "preload": "Preload the operating system with commonly used libraries and tools",
      "prepare": "A hook triggered by running npm install that runs logic such as installing pre-commit hooks",
      "release": "Publish the software to all supported channels using semantic-release",
      "repair": "Fixes basic issues in projects that are having trouble running basic commands like 'task start'",
      "start": "Entrypoint for new developers that installs requirements and then runs 'task start'",
      "test": "Runs the appropriate test logic by running the test command defined under scripts in package.json",
      "unpack": "Populates production node_modules from compressed copies saved in the .modules/ folder",
      "update": "Update and refresh the repository with upstream changes and templated parts"
    }
  },
  "pnpm": {
    "allowedVersions": {
      "@typescript-eslint/eslint-plugin": "5",
      "eslint": "8",
      "typescript": "4"
    },
    "neverBuiltDependencies": [
      "core-js",
      "core-js-pure",
      "highlight.js"
    ],
    "peerDependencyRules": {
      "ignoreMissing": [
        "eslint",
        "prettier"
      ]
    }
  },
  "prettier": "prettier-config-sexy-mode",
  "release": {
    "branches": [
      "main",
      "master",
      "next",
      {
        "name": "beta",
        "prerelease": true
      }
    ],
    "extends": "semantic-release-config"
  }
}
